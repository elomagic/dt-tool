name: Release to GitHub Releases

on:
  push:
    branches: [ "main" ]

jobs:
  release:

    runs-on: ubuntu-latest

    steps:
      - name: Checkout project
        uses: actions/checkout@a5ac7e51b41094c92402da3b24376905380afc29 # v4

      - name: Set up JDK 21
        uses: actions/setup-java@99b8673ff64fbf99d8d325f52d9a5bdedb8483e9 # v4
        with:
          java-version: '21'
          distribution: 'temurin'
          cache: maven

      - name: Cache Maven repository
        uses: actions/cache@0c45773b623bea8c8e75f6c82b208c3cf94ea4f9 # v4
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            $${{ runner.os }}-maven-

      - name: Extract version from POM
        id: extract_version
        run: |
          VERSION=$(mvn help:evaluate -Dexpression=project.version -q -DforceStdout)
          # Remove -SNAPSHOT from version
          VERSION=${VERSION%-SNAPSHOT}
          echo "VERSION=$VERSION" >> $GITHUB_ENV

      - name: Set up Git user
        run: |
          git config --global user.name 'github-actions[bot]'
          git config --global user.email '41898282+github-actions[bot]@users.noreply.github.com'

      - name: Set release version
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          mvn versions:set -DnewVersion=${{ env.VERSION }}
          git commit -am "Release version set"
          git push origin main 

      - name: Build with Maven
        run: mvn -B package --file pom.xml

      - name: Create and push tag
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          git tag v${{ env.VERSION }}
          git push origin v${{ env.VERSION }}

      - name: Increase version
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          mvn -B release:update-versions
          git commit -am "Next development version set"
          git push origin main    

      - name: Create GitHub release
        id: create_release
        uses: actions/create-release@0cb9c9b65d5d1901c1f53e5e66eaf4afd303e70e # v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ env.VERSION }}
          release_name: Release v${{ env.VERSION }}
          draft: true
          prerelease: false

      - name: Install GitHub CLI
        run: sudo apt-get install gh

      - name: Upload release assets
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          for file in target/dt-tool*; do
            if [ -f "$file" ]; then
              echo "Uploading $file..."
              gh release upload v${{ env.VERSION }} "$file" --clobber
            fi
          done
